% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ptlmapper.R
\name{kantorovich2D}
\alias{kantorovich2D}
\title{A Function That Computes Kantorovich Distance between two 2D samples}
\usage{
kantorovich2D(x, y, nbreaks = 32, lims = NULL, k1 = NULL, k2 = NULL)
}
\arguments{
\item{x}{A vector of numerics.}

\item{y}{A vector of numerics.}

\item{nbreaks}{The number of breaks used to build histograms.}

\item{lims}{vector of numerics of length 2 that specifies the range on which the histograms need to be built.}

\item{k1}{A kernel obtains with the `kde2d` function.}

\item{k2}{A kernel obtains with the `kde2d` function with the same n and lims as /k1/.}
}
\value{
The kantorovich distance between two 2D samples.
}
\description{
This function computes Kantorovich distance betwenn two 2D samples.
}
\examples{
# # dataset
# x = cbind(rnorm(100000,0,1),rnorm(100000,0,1))
# y = cbind(rnorm(100000,0,2),rnorm(100000,0,2))
#
# # kantorovich2D algo
# nbreaks=32
# lims=c(min(x[,1], y[,1]),max(x[,1], y[,1]),min(x[,2], y[,2]), max(x[,2],y[,2]))
# k1 = MASS::kde2d(x[,1], x[,2], n=nbreaks, lims=lims)
# k2 = MASS::kde2d (y[,1], y[,2], n=nbreaks, lims=lims)
# binsizex = k1$x[2] - k1$x[1]
# binsizey = k1$y[2] - k1$y[1]
# diff = k1$z - k2$z
# cumsum2D = function(A){
#   t(apply(apply(A, 2, cumsum), 1, cumsum))
# }
# cumdiff = cumsum2D(diff)
# KD = binsizex*binsizey*binsizex*binsizey*sum(abs(cumdiff))
#
# # illustration
# layout(matrix(1:4, 2), respect=TRUE)
# persp(k1, phi = 30, theta = 20, d = 5)
# persp(k2, phi = 30, theta = 20, d = 5)
# kdiff = k1
# kdiff$z = diff
# persp(kdiff, phi = 30, theta = 20, d = 5)
# kcumdiff = k1
# kcumdiff$z = cumdiff
# persp(kcumdiff, phi = 30, theta = 20, d = 5)
}

